name: 'Terraform Plan/Apply'

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'

env:
  ROOT_MODULE_PATH: terraform/environments/dev
  TFSTATE_BUCKET: tmp-hands-on-tf-state-${{ secrets.AWS_ACCOUNT_ID }}
  PLAN_ROLE_ARN: ${{ vars.DEV_TERRAFORM_PLAN_ROLE_ARN }}
  APPLY_ROLE_ARN: ${{ vars.DEV_TERRAFORM_APPLY_ROLE_ARN }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  TF_VAR_allowed_cidr_blocks: ${{ secrets.TF_VAR_allowed_cidr_blocks }}

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    uses: ./.github/workflows/tf-plan.yaml

  terraform-apply:
    name: 'Terraform Apply'
    if: needs.terraform-plan.outputs.tfplanExitCode == 2
    runs-on: ubuntu-latest
    needs: [terraform-plan]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set AWS Credential
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.APPLY_ROLE_ARN }}
        aws-region: ap-northeast-1

    - name: Get Terraform Version
      id: tf-version
      run: |
        echo "TERRAFORM_VERSION=$(cat .terraform-version)" >> $GITHUB_OUTPUT

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ steps.tf-version.outputs.TERRAFORM_VERSION }}

    - name: Terraform Init
      run: |
        terraform init -backend-config="bucket=${{ env.TFSTATE_BUCKET }}"
      working-directory: ${{ env.ROOT_MODULE_PATH }}

    - name: Download Terraform Plan
      uses: actions/download-artifact@v4
      with:
        name: tfplan
        path: ${{ env.ROOT_MODULE_PATH }}

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: ${{ env.ROOT_MODULE_PATH }}
